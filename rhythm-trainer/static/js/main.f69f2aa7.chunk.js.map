{"version":3,"sources":["components/NumberInput/NumberInput.module.scss","components/Note/images/quarter.svg","components/Note/images/eights.svg","components/Note/images/sixteens.svg","components/Note/images/triplet.svg","exercises/ChangingMetronomeExercise/ChangingMetronomeExercise.module.scss","types.ts","contexts/exercises.ts","components/NotesSequence/NotesSequence.tsx","components/Note/Note.tsx","components/UserClicksCanvas/UserClicksCanvas.tsx","components/NumberInput/NumberInput.tsx","exercises/base.ts","exercises/ChangingMetronomeExercise/changingMetronome.ts","utils/sizes.ts","exercises/ChangingMetronomeExercise/ChangingMetronomeExercise.tsx","components/ExerciseList/ExerciseList.tsx","App.tsx","index.tsx","components/NotesSequence/NotesSequence.module.scss","components/Note/Note.module.scss","components/ExerciseList/ExerciseList.module.scss","components/Note/images/cancel.svg","components/UserClicksCanvas/UserClicksCanvas.module.scss","App.module.scss"],"names":["module","exports","NoteSize","ExercisesContext","React","createContext","Fours","Eights","Sixteens","Triplets","ListDroppableId","images","require","Note","props","image","isDraggingAway","cancelImage","note","key","blinkIndex","ref","draggableRef","className","classNames","styles","base","base__blink","draggingProps","alt","src","NotesSequenceWrapper","onDragEnd","result","source","destination","droppableId","SEQUENCE","sequence","splice","index","onSequenceChange","list","startIndex","endIndex","removed","reorder","NOTES","notes","children","NotesSource","direction","isDropDisabled","provided","innerRef","droppableProps","style","transitionDuration","map","draggableId","draggable","snapshot","draggableProps","dragHandleProps","isDragging","display","placeholder","NotesSequence","isPlaying","noteIndex","playingIndex","sequence__over","isDraggingOver","draggingOver","UserClicksCanvas","canvas","onResize","current","height","parentElement","clientHeight","width","clientWidth","draw","context","getContext","clearRect","min","idealClicks","from","total","length","forEach","click","drawLine","realClicks","actualClick","getColorByDelta","delta","x","y","color","roundX","Math","round","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","createRef","window","addEventListener","this","removeEventListener","Component","NumberInput","useState","value","setValue","changeValue","newValue","nextValue","max","onChanged","onInputChanged","e","parseInt","target","button","onClick","bind","type","onChange","onBlur","onWheel","deltaY","BaseHandler","allowKeys","anyKey","startTime","Promise","resolve","time","ExerciseManager","handlers","endTime","inProgress","handler","push","Date","getTime","all","setStartTime","beforeRun","run","afterRun","SoundHandler","clicks","preClicksCount","gain","oscillator","AudioContext","createOscillator","frequency","createGain","connect","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","start","setTimeout","beforeRunTime","TickHandler","callback","ChangingMetronomeClickHandler","userClicks","getUserClicks","reduce","minDelta","currentValue","abs","Infinity","desiredClick","handleKeydown","includes","onKeyboardEvent","handleMouseDown","onMouseEvent","document","clicksBySize","Array","apply","_","clicksFromNotes","bpm","ticksPerSecond","getPlayingNotesIndexes","indexes","ExerciseState","exerciseComponentByType","changingMetronome","initialSequence","savedBpm","localStorage","getItem","JSON","parse","isArray","Error","setUserClicks","setClicks","setSequence","noteIndexes","setNoteIndexes","setBpm","countdown","setCountdown","NOT_STARTED","state","setState","setPlayingIndex","handleUserClicks","newUserClicks","handleTick","RUNNING","blink","caption","COUNTDOWN","action","info","FINISHED","ticks","score","uniqBy","c","u","prev","curr","FAILED_TO_START","a","async","setItem","toString","stringify","manager","addHandler","ExerciseList","exercises","useContext","exercise","Fragment","App","app","Provider","Object","keys","ReactDOM","render","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,oBCD/FD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,kBCC3CD,EAAOC,QAAU,CAAC,KAAO,wCAAwC,QAAU,2CAA2C,MAAQ,yCAAyC,IAAM,uCAAuC,SAAW,4CAA4C,OAAS,0CAA0C,KAAO,wCAAwC,MAAQ,yCAAyC,MAAQ,yCAAyC,MAAQ,yCAAyC,MAAQ,2C,8CCD5fC,E,iCCMGC,G,MAFUC,IAAMC,cAA6B,K,mIDJhDH,O,iBAAAA,I,mBAAAA,I,uBAAAA,I,wBAAAA,M,KAOa,mBACpBA,EAASI,MAAQ,CAAC,IADE,cAEpBJ,EAASK,OAAS,CAAC,EAAG,KAFF,cAGpBL,EAASM,SAAW,CAAC,EAAG,IAAM,GAAK,MAHf,cAIpBN,EAASO,SAAW,CAAC,EAAG,EAAE,EAAG,EAAE,IAJ7B,I,EEUFC,E,kCCRCC,GAAM,mBACPT,EAASI,MAAQM,EAAQ,MADlB,cAEPV,EAASK,OAASK,EAAQ,MAFnB,cAGPV,EAASM,SAAWI,EAAQ,MAHrB,cAIPV,EAASO,SAAWG,EAAQ,MAJrB,GA6BGC,EAdmB,SAACC,GAC/B,IAAMC,EAAQD,EAAME,eAAiBC,IAAcN,EAAOG,EAAMI,MAChE,OACI,uCACIC,IAAKL,EAAMM,WACXC,IAAKP,EAAMQ,aACXC,UAAWC,IAAWC,IAAOC,KAAR,eAAgBD,IAAOE,aAAoC,IAAtBb,EAAMM,cAC5DN,EAAMc,eAEV,yBAAKC,IAAI,GAAGC,IAAKf,M,2BDhBxBL,K,cAAAA,E,qBAAAA,M,KAgBE,I,EAAMqB,EAA4D,SAACjB,GAmBtE,OACI,kBAAC,IAAD,CAAiBkB,UAnBC,SAACC,GAAwB,IACnCC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YAEhB,GAAID,EAAOE,cAAgB1B,EAAgB2B,SAAU,CACjD,IAAKF,GAAeA,EAAYC,cAAgB1B,EAAgB2B,SAAU,CACtE,IAAMC,EAAQ,YAAOxB,EAAMwB,UAE3B,OADAA,EAASC,OAAOL,EAAOM,MAAO,GACvB1B,EAAM2B,iBAAiBH,GAElC,OAAOxB,EAAM2B,iBAlCzB,SAAoBC,EAAWC,EAAoBC,GAC/C,IAAMX,EAAM,YAAOS,GADmD,EAEpDT,EAAOM,OAAOI,EAAY,GAArCE,EAF+D,oBAItE,OADAZ,EAAOM,OAAOK,EAAU,EAAGC,GACpBZ,EA8B+Ba,CAAQhC,EAAMwB,SAAUJ,EAAOM,MAAOL,EAAYK,QAEpF,GAAIN,EAAOE,cAAgB1B,EAAgBqC,QAAoB,OAAXZ,QAAW,IAAXA,OAAA,EAAAA,EAAaC,eAAgB1B,EAAgB2B,SAAU,CACvG,IAAMC,EAAQ,YAAOxB,EAAMwB,UAE3B,OADAA,EAASC,OAAOJ,EAAYK,MAAO,EAAG1B,EAAMkC,MAAMd,EAAOM,QAClD1B,EAAM2B,iBAAiBH,MAM7BxB,EAAMmC,WASNC,EAA0C,SAACpC,GACpD,OACI,kBAAC,IAAD,CAAWsB,YAAa1B,EAAgBqC,MAAOI,UAAU,aAAaC,gBAAc,IAC/E,SAACC,GAAD,OACG,uCAAKhC,IAAKgC,EAASC,SAAU/B,UAAWE,IAAOS,QAAYmB,EAASE,eAApE,CAAoFC,MAAO,CAACC,mBAAmB,YAC1G3C,EAAMkC,MAAMU,KAAI,SAACxC,EAAMsB,GAAP,OACZ,kBAAC,IAAD,CAAWrB,IAAKD,EAAMyC,YAAW,eAAUzC,GAAQsB,MAAOA,IACzD,SAACoB,EAAWC,GACT,OACI,oCACG,kBAAC,EAAD,CACIvC,aAAcsC,EAAUN,SACxBpC,KAAMA,EACNU,cAAa,eACNgC,EAAUE,eADJ,GAENF,EAAUG,mBAIjBF,EAASG,YACT,kBAAC,EAAD,CAAM9C,KAAMA,WAOhC,yBAAKsC,MAAO,CAACS,QAAS,SAAUZ,EAASa,kBAchDC,EAA8C,SAACrD,GACxD,OAAIA,EAAMsD,UAEF,yBAAK7C,UAAWE,IAAOa,UAClBxB,EAAMwB,SAASoB,KAAI,SAACxC,EAAMsB,GAAP,OAChB,kBAAC,EAAD,CACIrB,IAAKqB,EACLtB,KAAMA,EACNE,WAAYoB,IAAU1B,EAAMuD,UAAYvD,EAAMwD,cAAgB,QAO9E,kBAAC,IAAD,CAAWlC,YAAa1B,EAAgB2B,SAAUc,UAAU,eACvD,SAACE,EAA6BQ,GAA9B,OACG,yBACIxC,IAAKgC,EAASC,SACd/B,UAAWC,IAAWC,IAAOa,SAAR,eAChBb,IAAO8C,eAAiBV,EAASW,kBAGrC1D,EAAMwB,SAASoB,KAAI,SAACxC,EAAMsB,GAAP,OAChB,kBAAC,IAAD,CAAWrB,IAAKqB,EAAOmB,YAAW,wBAAmBnB,GAASA,MAAOA,IAChE,SAACoB,EAA8BC,GAC5B,OACI,kBAAC,EAAD,CACIvC,aAAcsC,EAAUN,SACxBpC,KAAMA,EACNF,eAAgB6C,EAASG,aAAeH,EAASY,aACjD7C,cAAa,eACNgC,EAAUE,eADJ,GAENF,EAAUG,yBAOrC,yBAAKP,MAAO,CAACS,QAAS,SAAUZ,EAASa,kB,wDEpIxCQ,E,YAGjB,WAAY5D,GAA+B,IAAD,8BACtC,4CAAMA,KAHV6D,YAE0C,IAmB1CC,SAAW,WACH,EAAKD,OAAOE,UACZ,EAAKF,OAAOE,QAAQC,OAAS,EAAKH,OAAOE,QAAQE,cAAeC,aAChE,EAAKL,OAAOE,QAAQI,MAAQ,EAAKN,OAAOE,QAAQE,cAAeG,YAC/D,EAAKC,SAvB6B,EA2B1CA,KAAO,WACH,GAAK,EAAKR,OAAOE,QAAjB,CAGA,IAAMO,EAAU,EAAKT,OAAOE,QAAQQ,WAAW,MAJtC,EAKiB,EAAKV,OAAOE,QAA9BI,EALC,EAKDA,MAAOH,EALN,EAKMA,OACf,GAAKM,EAAL,CAGAA,EAAQE,UAAU,EAAG,EAAGL,EAAOH,GAC/B,IAAMS,EAAM,EAAKzE,MAAM0E,YAAY,EAAK1E,MAAM2E,MAAQ,GAChDC,EAAQ,EAAK5E,MAAM0E,YAAY,EAAK1E,MAAM0E,YAAYG,OAAS,GAAKJ,EAAM,GAChF,EAAKzE,MAAM0E,YAAYI,SAAQ,SAAAC,GAAK,OAChC,EAAKC,SAASV,EAASH,GAASY,EAAQN,GAAOG,EAAO,EAAGZ,EAAS,EAAG,cAEzE,EAAKhE,MAAMiF,WAAWH,SAAQ,SAAAC,GAAK,OAC/B,EAAKC,SAASV,EAASH,GAASY,EAAMG,YAAcT,GAAOG,EAAOZ,EAAS,EAAGA,EAAQ,EAAKmB,gBAAgBJ,EAAMK,cA3C/E,EA+C1CJ,SAAW,SAACV,EAAmCe,EAAWC,EAAWtB,EAAgBuB,GACjF,IAAMC,EAASC,KAAKC,MAAML,GAC1Bf,EAAQqB,YACRrB,EAAQsB,YAAcL,EACtBjB,EAAQuB,OAAOL,EAAQF,GACvBhB,EAAQwB,OAAON,EAAQF,EAAItB,GAC3BM,EAAQyB,SACRzB,EAAQ0B,aAtD8B,EAyD1Cb,gBAAkB,SAACC,GACf,OAAIA,EAAQ,GACD,UAEPA,EAAQ,GACD,UAEJ,WA7DP,EAAKvB,OAASvE,IAAM2G,YAHkB,E,iFAOtCC,OAAOC,iBAAiB,SAAUC,KAAKtC,UACvCsC,KAAKtC,a,6CAILoC,OAAOG,oBAAoB,SAAUD,KAAKtC,Y,2CAI1CsC,KAAK/B,S,+BAoDL,OAAO,yBAAK5D,UAAWE,IAAOC,MAAM,4BAAQL,IAAK6F,KAAKvC,c,GAvEhBvE,IAAMgH,W,iBCqCrCC,EArCiC,SAACvG,GAA6B,IAAD,EAC/CV,IAAMkH,SAASxG,EAAMyG,OAD0B,mBAClEA,EADkE,KAC3DC,EAD2D,KAGnEC,EAAc,SAACC,GACjB,IAAMC,EAAYpB,KAAKqB,IAAIrB,KAAKhB,IAAImC,EAN1B,KADA,IAQVF,EAASG,GACT7G,EAAM+G,UAAUF,IAGdG,EAAiB,SAACC,GACpBN,EAAYO,SAASD,EAAEE,OAAOV,SAOlC,OACI,yBAAKhG,UAAWE,IAAOC,MACnB,yBAAKH,UAAWE,IAAOyG,OAAQC,QAASV,EAAYW,KAAK,KAAMb,EAAQ,KAAvE,OACA,yBAAKhG,UAAWE,IAAOyG,OAAQC,QAASV,EAAYW,KAAK,KAAMb,EAAQ,IAAvE,MACA,yBAAKhG,UAAWE,IAAOyG,OAAQC,QAASV,EAAYW,KAAK,KAAMb,EAAQ,IAAvE,MACA,2BACIhG,UAAWE,IAAO8F,MAClBhC,IA3BE,GA2BcqC,IA1Bd,IA0B8BS,KAAK,SACrCC,SAAUR,EACVS,OAAQT,EACRU,QAdI,SAACT,GACbN,EAAYF,GAASQ,EAAEU,OAAS,GAAK,EAAI,KAcjClB,MAAOA,IAEX,yBAAKhG,UAAWE,IAAOyG,OAAQC,QAASV,EAAYW,KAAK,KAAMb,EAAQ,IAAvE,MACA,yBAAKhG,UAAWE,IAAOyG,OAAQC,QAASV,EAAYW,KAAK,KAAMb,EAAQ,IAAvE,MACA,yBAAKhG,UAAWE,IAAOyG,OAAQC,QAASV,EAAYW,KAAK,KAAMb,EAAQ,KAAvE,SC5CCmB,EAAb,iDACIC,UAAsB,GAD1B,KAEIC,QAAkB,EAFtB,KAGIC,UAAoB,EAHxB,yDAKiBA,GACT3B,KAAK2B,UAAYA,IANzB,kCASQ,OAAOC,QAAQC,YATvB,4BAYQ,OAAOD,QAAQC,YAZvB,iCAeQ,OAAOD,QAAQC,YAfvB,sCAiBoBC,EAAc7H,MAjBlC,mCAkBiB6H,QAlBjB,KAqBaC,EAAb,WAMI,aAAe,yBALPC,cAKM,OAJPL,UAAoB,EAIb,KAHPM,QAAkB,EAGX,KAFPC,YAAsB,EAGzBlC,KAAKgC,SAAW,GAPxB,uDAUeG,GAEP,OADAnC,KAAKgC,SAASI,KAAKD,GACZnC,OAZf,kHAgBQA,KAAKkC,YAAa,EAClBlC,KAAK2B,WAAY,IAAIU,MAAOC,UAE5BV,QAAQW,IAAIvC,KAAKgC,SAASxF,KAAI,SAAA2F,GAAO,OAAIA,EAAQK,aAAa,EAAKb,eAnB3E,mBAoBcC,QAAQW,IAAIvC,KAAKgC,SAASxF,KAAI,SAAA2F,GAAO,OAAIA,EAAQM,iBApB/D,iCAqBcb,QAAQW,IAAIvC,KAAKgC,SAASxF,KAAI,SAAA2F,GAAO,OAAIA,EAAQO,WArB/D,iCAsBcd,QAAQW,IAAIvC,KAAKgC,SAASxF,KAAI,SAAA2F,GAAO,OAAIA,EAAQQ,gBAtB/D,wDA2BaC,EAAb,YAOI,WAAYC,EAAkBC,GAAyB,IAAD,8BAClD,+CAPJ5E,aAMsD,IALtD6E,UAKsD,IAJtDC,gBAIsD,IAHtDH,YAGsD,IAFtDC,oBAEsD,EAElD,EAAKD,OAASA,EACd,EAAKC,eAAiBA,EAEtB,EAAK5E,QAAU,IAAI+E,aACnB,EAAKD,WAAa,EAAK9E,QAAQgF,mBAC/B,EAAKF,WAAW7B,KAAO,OACvB,EAAK6B,WAAWG,UAAU9C,MAAQ,IAElC,EAAK0C,KAAO,EAAK7E,QAAQkF,aACzB,EAAKL,KAAKA,KAAK1C,MAAQ,EACvB,EAAK0C,KAAKM,QAAQ,EAAKnF,QAAQjD,aAC/B,EAAK+H,WAAWK,QAAQ,EAAKN,MAbqB,EAP1D,yEAuBgC,IAAD,OACvB,OAA2B,IAAvB/C,KAAK6C,OAAOpE,OACLmD,QAAQC,WAEnB7B,KAAK6C,OAAOnE,SAAQ,SAAAC,GAChB,EAAKoE,KAAKA,KAAKO,sBAAsB3E,GACrC,EAAKoE,KAAKA,KAAKQ,eAAe,EAAG5E,GAEjC,EAAKoE,KAAKA,KAAKS,wBAAwB,EAAG7E,EAAQ,MAClD,EAAKoE,KAAKA,KAAKS,wBAAwB,EAAG7E,EAAQ,KAAO,QAE7DqB,KAAKgD,WAAWS,MAAM,GACf,IAAI7B,SAAQ,SAAAC,GAAO,OAAI6B,WAAW7B,EAAgD,IAAvC,EAAKgB,OAAO,EAAKC,eAAiB,UAnC5F,4BAsC0B,IAAD,OACXa,EAAgB3D,KAAK6C,OAAO7C,KAAK8C,eAAiB,GACxD,OAAO,IAAIlB,SAAQ,SAAAC,GAAO,OAAI6B,WAAW7B,EAAiE,KAAvD,EAAKgB,OAAO,EAAKA,OAAOpE,OAAS,GAAKkF,GAAwB,YAxCzH,GAAkCnC,GAgDrBoC,EAAb,YAII,WAAYf,EAAkBgB,GAAiC,IAAD,8BAC1D,+CAJJA,cAG8D,IAF9DhB,YAE8D,EAE1D,EAAKA,OAASA,EACd,EAAKgB,SAAWA,EAH0C,EAJlE,yEAUgC,IAAD,OAIvB,OAHI7D,KAAK6C,OAAOpE,OAAS,GACrBuB,KAAK6C,OAAOnE,SAAQ,SAACC,EAAOrD,GAAR,OAAkBoI,YAAW,kBAAM,EAAKG,SAASlF,EAAOrD,KAAgB,IAARqD,MAEjFiD,QAAQC,cAdvB,GAAiCL,GCvFpBsC,GAAb,YAII,WAAYjB,EAAkBgB,GAAqB,IAAD,8BAC9C,6CAAM,SAAC/B,GACH,EAAKiC,WAAW3B,MAAMN,EAAO,EAAKH,WAAa,KAC/CkC,EAAS,EAAKG,sBANtBnB,YAGkD,IAFlDkB,gBAEkD,IAUlDC,cAAgB,WACZ,IAAMnB,EAAsB,GAW5B,OAVA,EAAKkB,WAAWrF,SAAQ,SAAAC,GACpB,IAAMK,EAAQ,EAAK6D,OAAOoB,QAAO,SAASC,EAAUC,GAChD,OAAQ9E,KAAK+E,IAAIF,GAAY7E,KAAK+E,IAAID,EAAexF,GAASwF,EAAexF,EAAQuF,IACtFG,KACHxB,EAAOT,KAAK,CACRkC,aAAc3F,EAAQK,EACtBF,YAAaH,EACbK,aAGD6D,GAhBP,EAAKA,OAASA,EACd,EAAKkB,WAAa,GAP4B,EAJtD,2BD4GA,YAII,WAAYF,GAA6B,IAAD,8BACpC,+CAJJnC,QAAkB,EAGsB,EAFxCmC,cAEwC,IAiBhCU,cAAgB,SAAC1D,GACrB,IAAMiB,GAAO,IAAIO,MAAOC,WACpB,EAAKZ,QAAU,EAAKD,UAAU+C,SAAS3D,EAAE5G,OACzC,EAAKwK,gBAAgB3C,EAAMjB,EAAE5G,MApBG,EAwBhCyK,gBAAkB,WACtB,IAAM5C,GAAO,IAAIO,MAAOC,UACxB,EAAKqC,aAAa7C,IAxBlB,EAAK+B,SAAWA,EAFoB,EAJ5C,mEAYQ,OAFAe,SAAS7E,iBAAiB,UAAWC,KAAKuE,eAC1CK,SAAS7E,iBAAiB,YAAaC,KAAK0E,iBACrC9C,QAAQC,YAZvB,iCAkBQ,OAFA+C,SAAS3E,oBAAoB,UAAWD,KAAKuE,eAC7CK,SAAS3E,oBAAoB,YAAaD,KAAK0E,iBACxC9C,QAAQC,YAlBvB,sCAiCoBC,EAAc7H,GAC1B+F,KAAK6D,SAAS/B,EApCO,MAE7B,mCAqCiBA,GACT9B,KAAK6D,SAAS/B,EAxCO,QAE7B,GAAkCN,IEnHrBqD,IAAY,mBACpB7L,EAASI,MAAQ0L,MAAMC,MAAM,EAAGD,MAAM,IAAItI,KAAY,SAACwI,EAAQ1J,GAAT,OAA4BA,EAAQ,MADtE,cAEpBtC,EAASK,OAASyL,MAAMC,MAAM,EAAGD,MAAM,IAAItI,KAAY,SAACwI,EAAQ1J,GAAT,OAA4BA,EAAQ,MAFvE,cAGpBtC,EAASO,SAAWuL,MAAMC,MAAM,EAAGD,MAAM,KAAKtI,KAAY,SAACwI,EAAQ1J,GAAT,OAA4BA,EAAQ,OAH1E,cAIpBtC,EAASM,SAAWwL,MAAMC,MAAM,EAAGD,MAAM,KAAKtI,KAAY,SAACwI,EAAQ1J,GAAT,OAA4BA,EAAQ,OAJ1E,GAOlB,SAAS2J,GAAgBnJ,EAAmBoJ,GAC/C,IAAMC,EAAiB,IAASD,EAE5BrC,EAAmB,GAIvB,OAHA/G,EAAM4C,SAAQ,SAAC1E,EAAMsB,GACjBuH,EAAM,sBAAOA,GAAP,YAAkBgC,GAAa7K,GAAMwC,KAAI,SAAAmC,GAAK,OAAIwG,GAAkBxG,EAAgB,EAARrD,WAE/EuH,EAGJ,SAASuC,GAAuBtJ,GACnC,IAAIuJ,EAAoB,GAMxB,OALAvJ,EAAM4C,SAAQ,SAAC1E,EAAMsB,GACjBuJ,GAAa7K,GAAM0E,SAAQ,WACvB2G,EAAQjD,KAAK9G,SAGd+J,E,ICRNC,G,6BAAAA,O,6BAAAA,I,yBAAAA,I,qBAAAA,I,uBAAAA,I,sCAAAA,Q,KAQE,ICpBMC,GAAqD,CAC9DC,kBDmB+C,WAC/C,IAOIC,EAPE3J,EAAQ,CACV9C,EAASI,MACTJ,EAASK,OACTL,EAASO,SACTP,EAASM,UAEPoM,EAAW5E,SAAS6E,aAAaC,QAlBd,cAkB+C,KAAM,IAE9E,IAEI,GADAH,EAAkBI,KAAKC,MAAMH,aAAaC,QApBhB,oBAqBrBG,IAAQN,GACT,MAAMO,QAEZ,MAAMnF,GACJ4E,EAAe,UAAO3J,GAf2B,MAiBf5C,IAAMkH,SAAsB,IAjBb,mBAiB7C2D,EAjB6C,KAiBjCkC,EAjBiC,OAkBvB/M,IAAMkH,SAAmB,IAlBF,mBAkB7CyC,EAlB6C,KAkBrCqD,EAlBqC,OAmBnBhN,IAAMkH,SAAqBqF,GAnBR,mBAmB7CrK,EAnB6C,KAmBnC+K,EAnBmC,OAoBdjN,IAAMkH,SAAmB,IApBX,mBAoB7CgG,EApB6C,KAoBhCC,EApBgC,OAqB7BnN,IAAMkH,SAAiBsF,GArBM,mBAqB7CR,EArB6C,KAqBxCoB,EArBwC,OAsBjBpN,IAAMkH,SAAiB,GAtBN,mBAsB7CmG,EAtB6C,KAsBlCC,EAtBkC,OAuBzBtN,IAAMkH,SAAwBkF,GAAcmB,aAvBnB,mBAuB7CC,EAvB6C,KAuBtCC,EAvBsC,OAwBXzN,IAAMkH,SAAS,GAxBJ,mBAwB7ChD,EAxB6C,KAwB/BwJ,EAxB+B,KA0B/CC,EAAmB,SAACC,GACtBb,EAAca,IAGZC,EAAa,SAACjF,EAAcxG,GAC9BsL,EAAgBtL,EAAQ,GACpBA,EAAQ,GACRkL,EAAalL,EAAQ,GAEX,IAAVA,GACAqL,EAASrB,GAAc0B,UA8B/B,OACI,yBAAK3M,UAAWE,KAAOC,MACnB,yBAAKP,IAAKmD,EAAc/C,UAAWE,KAAO0M,QAC1C,kBAAC,EAAD,CAAsB7L,SAAUA,EAAUG,iBAAkB4K,EAAarK,MAAOA,GAC5E,yBAAKzB,UAAWE,KAAOuB,OACnB,yBAAKzB,UAAWE,KAAO2M,SAAvB,4BACA,kBAAC,EAAD,CAAapL,MAAOA,KAExB,yBAAKzB,UAAWE,KAAO2K,KACnB,yBAAK7K,UAAWE,KAAO2M,SAAvB,OACA,kBAAC,EAAD,CAAavG,UAAW2F,EAAQjG,MAAO6E,KAE3C,yBAAK7K,UAAWE,KAAOa,UACnB,yBAAKf,UAAWE,KAAO2M,SAAvB,wBACA,kBAAC,EAAD,CACIhK,UAAWwJ,IAAUpB,GAAc6B,WAAaT,IAAUpB,GAAc0B,QACxE5L,SAAUA,EACV+B,UAAWiJ,EAAYhJ,GACvBA,aAAcA,MAK1B,yBAAK/C,UAAWE,KAAO6M,QAEfV,IAAUpB,GAAcmB,aACxB,yBAAKpM,UAAWE,KAAO8M,MAAvB,+CAGAX,IAAUpB,GAAc6B,WACxB,yBAAK9M,UAAWE,KAAO8M,MAAOd,IAG7BG,IAAUpB,GAAc0B,SAAWN,IAAUpB,GAAc6B,YAC5D,yBAAK9M,UAAWE,KAAO8M,MAAvB,8CAGCX,IAAUpB,GAAc0B,SAAWN,IAAUpB,GAAcgC,WAC5D,yBAAKjN,UAAWE,KAAOgN,OACnB,kBAAC,EAAD,CAAajJ,YAAauE,EAAQhE,WAAYkF,EAAYxF,KAAM,KAIpEmI,IAAUpB,GAAcgC,UAAkC,IAAtBvD,EAAWtF,QAC/C,yBAAKpE,UAAWE,KAAO8M,MAAvB,gBAEI,0BAAMhN,UAAWE,KAAOiN,OACnBnI,KAAKqB,IAAImC,EAAOpE,OAASgJ,IAAO1D,GAAY,SAAA2D,GAAC,OAAIA,EAAEpD,gBAAc7F,OAAS,EAAG,IAHtF,iBAMI,0BAAMpE,UAAWE,KAAOiN,OACnBnI,KAAKC,MAAM,IAAOyE,EAAWvH,KAAI,SAAAmL,GAAC,OAAItI,KAAK+E,IAAIuD,EAAE3I,UAAQiF,QAAO,SAAC2D,EAAMC,GAAP,OAAgBD,EAAOC,KAAQ9D,EAAWtF,QAAU,MAK7HiI,IAAUpB,GAAcgC,UAAkC,IAAtBvD,EAAWtF,QAC/C,yBAAKpE,UAAWE,KAAO8M,MAAvB,eAKCX,IAAUpB,GAAcmB,aAAeC,IAAUpB,GAAcgC,UAAYZ,IAAUpB,GAAcwC,kBACpG,4BAAQzN,UAAWE,KAAOkJ,MAAOxC,QAzF7B,4BAAA8G,EAAAC,OAAA,mDACZtB,IAAUpB,GAAc6B,WAAaT,IAAUpB,GAAc0B,QADjD,oDAIhBrB,aAAasC,QAvDQ,YAuDsB/C,EAAIgD,YAC/CvC,aAAasC,QAvDa,iBAuDsBpC,KAAKsC,UAAU/M,IACvC,IAApBA,EAASqD,OANG,uBAOZkI,EAASrB,GAAcwC,iBAPX,iCAUVjF,EAASoC,GAAgB,CAACjM,EAASI,OAAX,mBAAqBgC,IAAW8J,GAC9DmB,EAAejB,GAAuBhK,IAEtC6K,EAAc,IACdU,EAASrB,GAAc6B,WACvBjB,EAAUrD,IAEJuF,EAAU,IAAIrG,GACZsG,WAAW,IAAIzF,EAAaC,EAAQ,IAC5CuF,EAAQC,WAAW,IAAIzE,EAAYf,EAAQkE,IAC3CqB,EAAQC,WAAW,IAAIvE,GAA8BjB,EAAQgE,IApB7C,YAAAkB,EAAA,MAqBVK,EAAQ3E,SArBE,QAuBhBkD,EAASrB,GAAcgC,UAvBP,wCAyFJ,aCjJPgB,GAAyB,WAClC,IAAMC,EAAYrP,IAAMsP,WAAWvP,GACnC,OACI,yBAAKoB,UAAWE,IAAOC,MAClB+N,EAAU/L,KAAI,SAAAiM,GAAQ,OACnB,kBAAC,IAAMC,SAAP,CAAgBzO,IAAKwO,GAAWlD,GAAwBkD,GAAU,U,oBCEnEE,GAVO,WAClB,OACI,yBAAKtO,UAAWE,KAAOqO,KACnB,kBAAC,EAAiBC,SAAlB,CAA2BxI,MAAOyI,OAAOC,KAAKxD,KAC1C,kBAAC,GAAD,SCNhByD,IAASC,OAAO,kBAAC,GAAD,MAASrE,SAASsE,eAAe,U,mBCJjDpQ,EAAOC,QAAU,CAAC,KAAO,4BAA4B,OAAS,8BAA8B,SAAW,gCAAgC,eAAiB,wC,mBCAxJD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,0BAA0B,MAAQ,sB,mBCA5FD,EAAOC,QAAU,CAAC,KAAO,6B,mBCDzBD,EAAOC,QAAU,IAA0B,oC,mBCC3CD,EAAOC,QAAU,CAAC,KAAO,iC,mBCAzBD,EAAOC,QAAU,CAAC,IAAM,mB","file":"static/js/main.f69f2aa7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"NumberInput_base__Zg2rR\",\"value\":\"NumberInput_value__3KOx4\",\"button\":\"NumberInput_button__3lUuw\"};","module.exports = __webpack_public_path__ + \"static/media/quarter.bb8e6d28.svg\";","module.exports = __webpack_public_path__ + \"static/media/eights.31053e72.svg\";","module.exports = __webpack_public_path__ + \"static/media/sixteens.1f967ff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/triplet.e0d4aa7c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ChangingMetronomeExercise_base__16576\",\"caption\":\"ChangingMetronomeExercise_caption__QD0x9\",\"notes\":\"ChangingMetronomeExercise_notes__3Yn_X\",\"bpm\":\"ChangingMetronomeExercise_bpm__14BG_\",\"sequence\":\"ChangingMetronomeExercise_sequence__3bIBb\",\"action\":\"ChangingMetronomeExercise_action__22W3D\",\"info\":\"ChangingMetronomeExercise_info__BtdnQ\",\"score\":\"ChangingMetronomeExercise_score__sjZJy\",\"start\":\"ChangingMetronomeExercise_start__clgPa\",\"blink\":\"ChangingMetronomeExercise_blink__146W5\",\"ticks\":\"ChangingMetronomeExercise_ticks__13MLz\"};","export enum NoteSize {\n    Fours,\n    Eights,\n    Sixteens,\n    Triplets,\n}\n\nexport const clicksBySize = {\n    [NoteSize.Fours]: [0],\n    [NoteSize.Eights]: [0, 0.5],\n    [NoteSize.Sixteens]: [0, 0.25, 0.5, 0.75],\n    [NoteSize.Triplets]: [0, 1/3, 2/3],\n}\n","import React from 'react';\n\nexport type ExerciseState = string[];\n\nconst ExercisesContext = React.createContext<ExerciseState>([]);\n\nexport default ExercisesContext;\n","import React from 'react';\nimport { DragDropContext, Draggable, Droppable, DroppableProvided, DropResult, DroppableStateSnapshot, DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\n\nimport Note from 'components/Note/Note';\nimport { NoteSize } from 'types';\n\nimport styles from './NotesSequence.module.scss';\n\nfunction reorder<T>(list: T[], startIndex: number, endIndex: number): T[] {\n    const result = [...list];\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n};\n\n\nenum ListDroppableId {\n    NOTES = 'notes',\n    SEQUENCE = 'sequence',\n}\n\nexport interface NotesSequenceState {\n    notes: NoteSize[];\n    sequence: NoteSize[];\n}\n\nexport interface NotesSequenceWrapperProps {\n    notes: NoteSize[];\n    sequence: NoteSize[];\n    onSequenceChange: (sequence: NoteSize[]) => void;\n}\n\nexport const NotesSequenceWrapper: React.FC<NotesSequenceWrapperProps> = (props) => {\n    const handleDragEnd = (result: DropResult) => {\n        const { source, destination } = result;\n        \n        if (source.droppableId === ListDroppableId.SEQUENCE) {\n            if (!destination || destination.droppableId !== ListDroppableId.SEQUENCE) {\n                const sequence = [...props.sequence]\n                sequence.splice(source.index, 1)\n                return props.onSequenceChange(sequence);\n            }\n            return props.onSequenceChange(reorder(props.sequence, source.index, destination.index));\n        }\n        if (source.droppableId === ListDroppableId.NOTES && destination?.droppableId === ListDroppableId.SEQUENCE) {\n            const sequence = [...props.sequence]\n            sequence.splice(destination.index, 0, props.notes[source.index])\n            return props.onSequenceChange(sequence);\n        }\n    }\n    \n    return (\n        <DragDropContext onDragEnd={handleDragEnd}>\n            {props.children}\n        </DragDropContext>\n    )\n}\n\nexport interface NotesSourceProps {\n    notes: NoteSize[];\n}\n\nexport const NotesSource: React.FC<NotesSourceProps> = (props) => {\n    return (\n        <Droppable droppableId={ListDroppableId.NOTES} direction='horizontal' isDropDisabled>\n            {(provided: DroppableProvided) => (\n                <div ref={provided.innerRef} className={styles.source} {...provided.droppableProps} style={{transitionDuration: `0.001s`,}}>\n                    {props.notes.map((note, index) => (\n                         <Draggable key={note} draggableId={`note_${note}`} index={index}>\n                         {(draggable, snapshot) => {\n                             return (\n                                 <>\n                                    <Note \n                                        draggableRef={draggable.innerRef}\n                                        note={note}\n                                        draggingProps={{\n                                            ...draggable.draggableProps,\n                                            ...draggable.dragHandleProps,\n                                        }}\n                                    />\n                                    {\n                                        snapshot.isDragging &&\n                                        <Note note={note} />\n                                    }\n                                 </>\n                             );\n                         }}\n                     </Draggable>\n                    ))}\n                    <div style={{display: 'none'}}>{provided.placeholder}</div>\n                </div>\n            )}\n        </Droppable>\n    );\n}\n\nexport interface NotesSequenceProps {\n    sequence: NoteSize[];\n    isPlaying?: boolean;\n    playingIndex: number;\n    noteIndex: number;\n}\n\nexport const NotesSequence: React.FC<NotesSequenceProps> = (props) => {\n    if (props.isPlaying) {\n        return (\n            <div className={styles.sequence}>\n                {props.sequence.map((note, index) => (\n                    <Note\n                        key={index}\n                        note={note}\n                        blinkIndex={index === props.noteIndex ? props.playingIndex : -1}\n                    />\n                ))}\n            </div>\n        );\n    }\n    return (\n        <Droppable droppableId={ListDroppableId.SEQUENCE} direction='horizontal'>\n            {(provided: DroppableProvided, snapshot: DroppableStateSnapshot) => (\n                <div\n                    ref={provided.innerRef}\n                    className={classNames(styles.sequence, {\n                        [styles.sequence__over]: snapshot.isDraggingOver,\n                    })}\n                >\n                    {props.sequence.map((note, index) => (\n                        <Draggable key={index} draggableId={`sequence_note_${index}`} index={index}>\n                            {(draggable: DraggableProvided, snapshot: DraggableStateSnapshot) => {\n                                return (\n                                    <Note \n                                        draggableRef={draggable.innerRef}\n                                        note={note}\n                                        isDraggingAway={snapshot.isDragging && !snapshot.draggingOver}\n                                        draggingProps={{\n                                            ...draggable.draggableProps,\n                                            ...draggable.dragHandleProps,\n                                        }}\n                                    />\n                                );\n                            }}\n                        </Draggable>\n                    ))}\n                    <div style={{display: 'none'}}>{provided.placeholder}</div>\n                </div>\n            )}\n        </Droppable>\n    );\n}\n\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { NoteSize } from 'types';\n\nimport cancelImage from './images/cancel.svg';\n\nimport styles from './Note.module.scss';\n\nconst images = {\n    [NoteSize.Fours]: require('./images/quarter.svg'),\n    [NoteSize.Eights]: require('./images/eights.svg'),\n    [NoteSize.Sixteens]: require('./images/sixteens.svg'),\n    [NoteSize.Triplets]: require('./images/triplet.svg'),\n}\n\nexport interface NoteProps {\n    draggableRef?: any;\n    note: NoteSize;\n    draggingProps?: any;\n    isDraggingAway?: boolean;\n    blinkIndex?: number;\n}\n\nconst Note: React.FC<NoteProps> = (props) => {\n    const image = props.isDraggingAway ? cancelImage : images[props.note];\n    return (\n        <div\n            key={props.blinkIndex}\n            ref={props.draggableRef}\n            className={classNames(styles.base, {[styles.base__blink]: props.blinkIndex !== -1})}\n            {...props.draggingProps}\n        >\n            <img alt='' src={image} />\n        </div>\n    );\n}\n\nexport default Note;\n","import React from 'react';\n\nimport { UserClick } from 'exercises/ChangingMetronomeExercise/types';\n\nimport styles from './UserClicksCanvas.module.scss';\n\nexport interface UserClicksCanvasProps {\n    idealClicks: number[];\n    realClicks: UserClick[];\n    from: number;\n}\n\nexport default class UserClicksCanvas extends React.Component<UserClicksCanvasProps> {\n    canvas: React.RefObject<HTMLCanvasElement>;\n\n    constructor(props: UserClicksCanvasProps) {\n        super(props);\n\n        this.canvas = React.createRef();\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onResize);\n        this.onResize();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    componentDidUpdate() {\n        this.draw();\n    }\n\n    onResize = () => {\n        if (this.canvas.current) {\n            this.canvas.current.height = this.canvas.current.parentElement!.clientHeight;\n            this.canvas.current.width = this.canvas.current.parentElement!.clientWidth;\n            this.draw();\n        }\n    }\n\n    draw = () => {\n        if (!this.canvas.current) {\n            return;\n        }\n        const context = this.canvas.current.getContext('2d');\n        const { width, height } = this.canvas.current\n        if (!context) {\n            return;\n        }\n        context.clearRect(0, 0, width, height);\n        const min = this.props.idealClicks[this.props.from] - 0.5;\n        const total = this.props.idealClicks[this.props.idealClicks.length - 1] - min + 0.5;\n        this.props.idealClicks.forEach(click => \n            this.drawLine(context, width * (click - min) / total, 0, height / 2, '#4287f5')\n        );\n        this.props.realClicks.forEach(click => \n            this.drawLine(context, width * (click.actualClick - min) / total, height / 2, height, this.getColorByDelta(click.delta))\n        );\n    }\n\n    drawLine = (context: CanvasRenderingContext2D, x: number, y: number, height: number, color: string) => {\n        const roundX = Math.round(x);\n        context.beginPath();\n        context.strokeStyle = color;\n        context.moveTo(roundX, y);\n        context.lineTo(roundX, y + height);\n        context.stroke();\n        context.closePath();\n    }\n\n    getColorByDelta = (delta: number) => {\n        if (delta > 0.2) {\n            return '#FF0000';\n        }\n        if (delta > 0.1) {\n            return '#FFFF00';\n        }\n        return '#00FF00';\n    }\n\n    render() {\n        return <div className={styles.base}><canvas ref={this.canvas}></canvas></div>;\n    }\n}\n","import React from 'react';\n\nimport styles from './NumberInput.module.scss';\n\ninterface NumberInputProps {\n    value: number;\n    onChanged: (value: number) => void;\n}\n\nconst MIN_VALUE = 10\nconst MAX_VALUE = 500\n\nconst NumberInput: React.FC<NumberInputProps> = (props: NumberInputProps) => {\n    const [value, setValue] = React.useState(props.value);\n\n    const changeValue = (newValue: number) => {\n        const nextValue = Math.max(Math.min(newValue, MAX_VALUE), MIN_VALUE);\n        setValue(nextValue);\n        props.onChanged(nextValue);\n    }\n\n    const onInputChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n        changeValue(parseInt(e.target.value)); \n    }\n\n    const onWheel = (e: React.WheelEvent<HTMLInputElement>) => {\n        changeValue(value + (e.deltaY > 0 ? -1 : 1));\n    }\n\n    return (\n        <div className={styles.base}>\n            <div className={styles.button} onClick={changeValue.bind(null, value - 10)}>-10</div>\n            <div className={styles.button} onClick={changeValue.bind(null, value - 5)}>-5</div>\n            <div className={styles.button} onClick={changeValue.bind(null, value - 1)}>-1</div>\n            <input\n                className={styles.value}\n                min={MIN_VALUE} max={MAX_VALUE} type='number'\n                onChange={onInputChanged}\n                onBlur={onInputChanged}\n                onWheel={onWheel}\n                value={value}\n            />\n            <div className={styles.button} onClick={changeValue.bind(null, value + 1)}>+1</div>\n            <div className={styles.button} onClick={changeValue.bind(null, value + 5)}>+5</div>\n            <div className={styles.button} onClick={changeValue.bind(null, value + 10)}>+10</div>\n        </div>\n    );\n};\n\nexport default NumberInput;","export class BaseHandler {\n    allowKeys: string[] = [];\n    anyKey: boolean = false;\n    startTime: number = 0;\n\n    setStartTime(startTime: number) {\n        this.startTime = startTime;\n    }\n    beforeRun(): Promise<void> {\n        return Promise.resolve();\n    }\n    run(): Promise<void> {\n        return Promise.resolve();\n    }\n    afterRun(): Promise<void> {\n        return Promise.resolve();\n    }\n    onKeyboardEvent(time: number, key: string) {}\n    onMouseEvent(time: number) {}\n}\n\nexport class ExerciseManager {\n    private handlers: BaseHandler[];\n    public startTime: number = 0;\n    public endTime: number = 0;\n    public inProgress: boolean = false;\n\n    constructor() {\n        this.handlers = [];\n    }\n\n    addHandler(handler: BaseHandler) {\n        this.handlers.push(handler);\n        return this;\n    }\n\n    async start() {\n        this.inProgress = true;\n        this.startTime = new Date().getTime();\n\n        Promise.all(this.handlers.map(handler => handler.setStartTime(this.startTime)));\n        await Promise.all(this.handlers.map(handler => handler.beforeRun()));\n        await Promise.all(this.handlers.map(handler => handler.run()));\n        await Promise.all(this.handlers.map(handler => handler.afterRun()));\n    }\n}\n\n\nexport class SoundHandler extends BaseHandler {\n    context: AudioContext;\n    gain: GainNode;\n    oscillator: OscillatorNode;\n    clicks: number[];\n    preClicksCount: number;\n\n    constructor(clicks: number[], preClicksCount: number) {\n        super();\n        this.clicks = clicks;\n        this.preClicksCount = preClicksCount;\n\n        this.context = new AudioContext();\n        this.oscillator = this.context.createOscillator();\n        this.oscillator.type = 'sine';\n        this.oscillator.frequency.value = 1000;\n\n        this.gain = this.context.createGain();\n        this.gain.gain.value = 0;\n        this.gain.connect(this.context.destination);\n        this.oscillator.connect(this.gain);\n    }\n\n    beforeRun(): Promise<void> {\n        if (this.clicks.length === 0) {\n            return Promise.resolve();\n        }\n        this.clicks.forEach(click => {\n            this.gain.gain.cancelScheduledValues(click);\n            this.gain.gain.setValueAtTime(0, click);\n\n            this.gain.gain.linearRampToValueAtTime(1, click + .001);\n            this.gain.gain.linearRampToValueAtTime(0, click + .001 + .01);\n        })\n        this.oscillator.start(0);\n        return new Promise(resolve => setTimeout(resolve, this.clicks[this.preClicksCount - 1] * 1000));\n    }\n\n    run(): Promise<void> {\n        const beforeRunTime = this.clicks[this.preClicksCount - 1]\n        return new Promise(resolve => setTimeout(resolve, (this.clicks[this.clicks.length - 1] - beforeRunTime) * 1000 + 300));\n    }\n}\n\nexport type CallbackFunction = (time: number) => void\nexport type TickCallbackFunction = (time: number, index: number) => void\n\n\nexport class TickHandler extends BaseHandler {\n    callback: TickCallbackFunction;\n    clicks: number[];\n\n    constructor(clicks: number[], callback: TickCallbackFunction) {\n        super();\n        this.clicks = clicks;\n        this.callback = callback;\n    }\n\n    beforeRun(): Promise<void> {\n        if (this.clicks.length > 0) {\n            this.clicks.forEach((click, index) => setTimeout(() => this.callback(click, index), click * 1000))\n        }\n        return Promise.resolve();\n    }\n}\n\n\nexport const TYPICAL_DELAY = 50;\n\nexport class ClickHandler extends BaseHandler {\n    anyKey: boolean = true;\n    callback: CallbackFunction;\n\n    constructor(callback: CallbackFunction) {\n        super();\n        this.callback = callback;\n    }\n\n    run(): Promise<void> {\n        document.addEventListener('keydown', this.handleKeydown);\n        document.addEventListener('mousedown', this.handleMouseDown);\n        return Promise.resolve();\n    }\n\n    afterRun(): Promise<void> {\n        document.removeEventListener('keydown', this.handleKeydown);\n        document.removeEventListener('mousedown', this.handleMouseDown);\n        return Promise.resolve();\n    }\n\n    private handleKeydown = (e: KeyboardEvent) => {\n        const time = new Date().getTime();\n        if (this.anyKey || this.allowKeys.includes(e.key)) {\n            this.onKeyboardEvent(time, e.key);\n        }\n    }\n\n    private handleMouseDown = () => {\n        const time = new Date().getTime();\n        this.onMouseEvent(time);\n    }\n\n    onKeyboardEvent(time: number, key: string) {\n        this.callback(time - TYPICAL_DELAY);\n    }\n\n    onMouseEvent(time: number) {\n        this.callback(time - TYPICAL_DELAY);\n    }\n}\n","import { ClickHandler } from 'exercises/base';\nimport { UserClick } from 'exercises/ChangingMetronomeExercise/types';\n\nexport interface ChangingMetronomeParams {\n    clicks: number[];\n}\n\nexport type onUpdate = (clicks: UserClick[]) => void;\n\nexport class ChangingMetronomeClickHandler extends ClickHandler {\n    clicks: number[];\n    userClicks: number[];\n\n    constructor(clicks: number[], callback: onUpdate) {\n        super((time) => {\n            this.userClicks.push((time - this.startTime) / 1000);\n            callback(this.getUserClicks());\n        });\n\n        this.clicks = clicks;\n        this.userClicks = [];\n    }\n\n    getUserClicks = () => {\n        const clicks: UserClick[] = [];\n        this.userClicks.forEach(click => {\n            const delta = this.clicks.reduce(function(minDelta, currentValue) {\n                return (Math.abs(minDelta) > Math.abs(currentValue - click) ? currentValue - click : minDelta);\n            }, Infinity);\n            clicks.push({\n                desiredClick: click + delta,\n                actualClick: click,\n                delta,\n            })\n        });\n        return clicks;\n    }\n}\n","import { NoteSize } from 'types';\n\nexport const clicksBySize = {\n    [NoteSize.Fours]: Array.apply(0, Array(4)).map<number>((_: any, index: number) => (index / 4)),\n    [NoteSize.Eights]: Array.apply(0, Array(8)).map<number>((_: any, index: number) => (index / 8)),\n    [NoteSize.Triplets]: Array.apply(0, Array(12)).map<number>((_: any, index: number) => (index / 12)),\n    [NoteSize.Sixteens]: Array.apply(0, Array(16)).map<number>((_: any, index: number) => (index / 16)),\n}\n\nexport function clicksFromNotes(notes: NoteSize[], bpm: number): number[] {\n    const ticksPerSecond = 4 * 60 / bpm;\n\n    let clicks: number[] = [];\n    notes.forEach((note, index) => {\n        clicks = [...clicks, ...clicksBySize[note].map(click => ticksPerSecond * (click + index * 1))];\n    })\n    return clicks;\n}\n\nexport function getPlayingNotesIndexes(notes: NoteSize[]): number[] {\n    let indexes: number[] = [];\n    notes.forEach((note, index) => {\n        clicksBySize[note].forEach(() => {\n            indexes.push(index);\n        })\n    })\n    return indexes;\n}\n","import React from 'react';\nimport uniqBy from 'lodash/uniqBy';\nimport isArray from 'lodash/isArray';\n\nimport { NotesSequence, NotesSequenceWrapper, NotesSource} from 'components/NotesSequence/NotesSequence';\nimport TicksCanvas from 'components/UserClicksCanvas/UserClicksCanvas';\nimport NumberInput from 'components/NumberInput/NumberInput';\nimport { ExerciseManager, SoundHandler, TickHandler } from 'exercises/base';\nimport { ChangingMetronomeClickHandler } from 'exercises/ChangingMetronomeExercise/changingMetronome';\nimport { UserClick } from 'exercises/ChangingMetronomeExercise/types';\nimport { clicksFromNotes, getPlayingNotesIndexes } from 'utils/sizes';\n\nimport styles from './ChangingMetronomeExercise.module.scss';\nimport { NoteSize } from 'types';\n\nconst BPM_LOCALSTORAGE_KEY = 'saved_bpm';\nconst SEQUENCE_LOCALSTORAGE_KEY = 'saved_sequence';\n\nenum ExerciseState {\n    NOT_STARTED,\n    COUNTDOWN,\n    RUNNING,\n    FINISHED,\n    FAILED_TO_START,\n}\n\nexport const ChangingMetronomeExercise: React.FC = () => {\n    const notes = [\n        NoteSize.Fours,\n        NoteSize.Eights,\n        NoteSize.Triplets,\n        NoteSize.Sixteens,\n    ];\n    const savedBpm = parseInt(localStorage.getItem(BPM_LOCALSTORAGE_KEY) || '60', 10);\n    let initialSequence;\n    try {\n        initialSequence = JSON.parse(localStorage.getItem(SEQUENCE_LOCALSTORAGE_KEY)!);\n        if (!isArray(initialSequence)) {\n            throw Error();\n        }\n    } catch(e) {\n        initialSequence = [...notes];\n    }\n    const [ userClicks, setUserClicks ] = React.useState<UserClick[]>([]);\n    const [ clicks, setClicks ] = React.useState<number[]>([]);\n    const [ sequence, setSequence ] = React.useState<NoteSize[]>(initialSequence);\n    const [ noteIndexes, setNoteIndexes] = React.useState<number[]>([]);\n    const [ bpm, setBpm ] = React.useState<number>(savedBpm);\n    const [ countdown, setCountdown ] = React.useState<number>(0);\n    const [ state, setState ] = React.useState<ExerciseState>(ExerciseState.NOT_STARTED);\n    const [ playingIndex, setPlayingIndex ] = React.useState(0);\n\n    const handleUserClicks = (newUserClicks: UserClick[]) => {\n        setUserClicks(newUserClicks);\n    }\n\n    const handleTick = (time: number, index: number) => {\n        setPlayingIndex(index - 4);\n        if (index < 4) {\n            setCountdown(index + 1);\n        }\n        if (index === 3) {\n            setState(ExerciseState.RUNNING);\n        }\n    }\n\n    const runExercise = async () => {\n        if (state === ExerciseState.COUNTDOWN || state === ExerciseState.RUNNING) {\n            return;\n        }\n        localStorage.setItem(BPM_LOCALSTORAGE_KEY, bpm.toString());\n        localStorage.setItem(SEQUENCE_LOCALSTORAGE_KEY, JSON.stringify(sequence));\n        if (sequence.length === 0) {\n            setState(ExerciseState.FAILED_TO_START);\n            return;\n        }\n        const clicks = clicksFromNotes([NoteSize.Fours, ...sequence], bpm);\n        setNoteIndexes(getPlayingNotesIndexes(sequence));\n        \n        setUserClicks([]);\n        setState(ExerciseState.COUNTDOWN);\n        setClicks(clicks);\n\n        const manager = new ExerciseManager();\n        manager.addHandler(new SoundHandler(clicks, 4));\n        manager.addHandler(new TickHandler(clicks, handleTick));\n        manager.addHandler(new ChangingMetronomeClickHandler(clicks, handleUserClicks));\n        await manager.start();\n\n        setState(ExerciseState.FINISHED);\n    };\n\n    return (\n        <div className={styles.base}>\n            <div key={playingIndex} className={styles.blink} />\n            <NotesSequenceWrapper sequence={sequence} onSequenceChange={setSequence} notes={notes}>\n                <div className={styles.notes}>\n                    <div className={styles.caption}>Notes (drag to sequence)</div>\n                    <NotesSource notes={notes} />\n                </div>\n                <div className={styles.bpm}>\n                    <div className={styles.caption}>BPM</div>\n                    <NumberInput onChanged={setBpm} value={bpm} />\n                </div>\n                <div className={styles.sequence}>\n                    <div className={styles.caption}>Sequence (size: 4/4)</div>\n                    <NotesSequence\n                        isPlaying={state === ExerciseState.COUNTDOWN || state === ExerciseState.RUNNING}\n                        sequence={sequence}\n                        noteIndex={noteIndexes[playingIndex]}\n                        playingIndex={playingIndex}\n                    />\n                </div>\n            </NotesSequenceWrapper>\n            \n            <div className={styles.action}>\n                {\n                    state === ExerciseState.NOT_STARTED &&\n                    <div className={styles.info}>Manage sequence, choose bpm and click start</div>\n                }\n                {\n                    state === ExerciseState.COUNTDOWN &&\n                    <div className={styles.info}>{countdown}</div>\n                }\n                {\n                    (state === ExerciseState.RUNNING || state === ExerciseState.COUNTDOWN) && \n                    <div className={styles.info}>Use any keyboard or mouse button to click</div>\n                }\n                {\n                    (state === ExerciseState.RUNNING || state === ExerciseState.FINISHED) &&\n                    <div className={styles.ticks}>\n                        <TicksCanvas idealClicks={clicks} realClicks={userClicks} from={4} />\n                    </div>\n                }\n                {\n                    state === ExerciseState.FINISHED && userClicks.length !== 0 &&\n                    <div className={styles.info}>\n                        Missed notes:\n                        <span className={styles.score}>\n                            {Math.max(clicks.length - uniqBy(userClicks, c => c.desiredClick).length - 4, 0)}\n                        </span>\n                        Average delta:\n                        <span className={styles.score}>\n                            {Math.round(1000 * userClicks.map(u => Math.abs(u.delta)).reduce((prev, curr) => prev + curr) / userClicks.length) / 1000}\n                        </span>\n                    </div>\n                }\n                {\n                    state === ExerciseState.FINISHED && userClicks.length === 0 &&\n                    <div className={styles.info}>\n                        No results\n                    </div>\n                }\n                {\n                    (state === ExerciseState.NOT_STARTED || state === ExerciseState.FINISHED || state === ExerciseState.FAILED_TO_START) &&\n                    <button className={styles.start} onClick={runExercise}>START</button>\n                }\n            </div>\n        </div>\n    );\n};\n\n","import React from 'react';\nimport ExercisesContext from 'contexts/exercises';\n\nimport styles from './ExerciseList.module.scss';\nimport { ChangingMetronomeExercise } from '../../exercises/ChangingMetronomeExercise/ChangingMetronomeExercise';\n\nexport const exerciseComponentByType: {[key: string]: React.FC} = {\n    changingMetronome: ChangingMetronomeExercise,\n}\n\nexport const ExerciseList: React.FC = () => {\n    const exercises = React.useContext(ExercisesContext);\n    return (\n        <div className={styles.base}>\n            {exercises.map(exercise => (\n                <React.Fragment key={exercise}>{exerciseComponentByType[exercise]({})}</React.Fragment>\n            ))}\n        </div>\n    );\n};\n","import React from 'react';\n\nimport ExercisesContext from 'contexts/exercises';\nimport { ExerciseList, exerciseComponentByType } from 'components/ExerciseList/ExerciseList';\n\nimport styles from './App.module.scss';\n\nconst App: React.FC = () => {\n    return (\n        <div className={styles.app}>\n            <ExercisesContext.Provider value={Object.keys(exerciseComponentByType)}>\n                <ExerciseList />\n            </ExercisesContext.Provider>\n        </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"NotesSequence_base__1DLs1\",\"source\":\"NotesSequence_source__1m3s8\",\"sequence\":\"NotesSequence_sequence__3IvSb\",\"sequence__over\":\"NotesSequence_sequence__over__1DJ-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Note_base__3WI4L\",\"base__blink\":\"Note_base__blink__ZRsMK\",\"blink\":\"Note_blink__jrqpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ExerciseList_base__3RYu2\"};","module.exports = __webpack_public_path__ + \"static/media/cancel.02d5c191.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"UserClicksCanvas_base__1VIGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};"],"sourceRoot":""}