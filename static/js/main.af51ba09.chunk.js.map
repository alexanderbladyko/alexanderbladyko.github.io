{"version":3,"sources":["components/NumberInput/NumberInput.module.scss","components/NotesSequence/images/quarter.svg","components/NotesSequence/images/eights.svg","components/NotesSequence/images/sixteens.svg","components/NotesSequence/images/triplet.svg","components/NotesSequence/NotesSequence.module.scss","types.ts","contexts/exercises.ts","components/NotesSequence/NotesSequence.tsx","components/UserClicksCanvas/UserClicksCanvas.tsx","components/NumberInput/NumberInput.tsx","exercises/base.ts","exercises/ChangingMetronomeExercise/changingMetronome.ts","utils/sizes.ts","exercises/ChangingMetronomeExercise/ChangingMetronomeExercise.tsx","components/ExerciseList/ExerciseList.tsx","App.tsx","index.tsx","exercises/ChangingMetronomeExercise/ChangingMetronomeExercise.module.scss","components/ExerciseList/ExerciseList.module.scss","components/UserClicksCanvas/UserClicksCanvas.module.scss","App.module.scss"],"names":["module","exports","NoteSize","ExercisesContext","React","createContext","Fours","Eights","Sixteens","Triplets","ListDroppableId","reorder","list","startIndex","endIndex","result","splice","removed","images","require","NotesSequence","props","handleDragEnd","source","destination","droppableId","SEQUENCE","sequence","state","index","setState","NOTES","notes","renderNote","note","key","draggableId","providedDraggable","snapshot","ref","innerRef","className","classnames","styles","note__dragging","isDragging","draggableProps","dragHandleProps","alt","src","renderSequenceNote","draggable","item","item__draggable","item__dropping","isDropAnimating","style","this","isPlaying","caption","map","playingIndex","item__blink","noteIndex","onDragEnd","direction","provided","classNames","sequence__over","isDraggingOver","display","placeholder","isDropDisabled","droppableProps","transitionDuration","Component","UserClicksCanvas","canvas","onResize","current","height","parentElement","clientHeight","width","clientWidth","draw","context","getContext","clearRect","min","idealClicks","from","total","length","forEach","click","drawLine","realClicks","actualClick","getColorByDelta","delta","x","y","color","roundX","Math","round","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","createRef","window","addEventListener","removeEventListener","base","NumberInput","useState","value","setValue","changeValue","newValue","nextValue","max","onChanged","onInputChanged","e","parseInt","target","button","onClick","bind","type","onChange","onBlur","onWheel","deltaY","BaseHandler","allowKeys","anyKey","startTime","Promise","resolve","time","ExerciseManager","handlers","endTime","inProgress","handler","push","Date","getTime","all","setStartTime","beforeRun","run","afterRun","SoundHandler","clicks","preClicksCount","gain","oscillator","AudioContext","createOscillator","frequency","createGain","connect","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","start","setTimeout","beforeRunTime","TickHandler","callback","ChangingMetronomeClickHandler","userClicks","getUserClicks","reduce","minDelta","currentValue","abs","Infinity","desiredClick","handleKeydown","includes","onKeyboardEvent","handleMouseDown","onMouseEvent","document","clicksBySize","Array","apply","_","clicksFromNotes","bpm","ticksPerSecond","getPlayingNotesIndexes","indexes","ExerciseState","exerciseComponentByType","changingMetronome","savedBpm","localStorage","getItem","setUserClicks","setClicks","noteIndexes","setNoteIndexes","setBpm","countdown","setCountdown","NOT_STARTED","setPlayingIndex","sequenceRef","handleUserClicks","newUserClicks","handleTick","RUNNING","blink","COUNTDOWN","action","info","FINISHED","ticks","score","uniqBy","c","u","prev","curr","FAILED_TO_START","a","async","setItem","toString","manager","addHandler","ExerciseList","exercises","useContext","exercise","Fragment","App","app","Provider","Object","keys","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af51ba09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"NumberInput_base__3_jvl\",\"value\":\"NumberInput_value__2TZQv\",\"button\":\"NumberInput_button__r1qHB\"};","module.exports = __webpack_public_path__ + \"static/media/quarter.bb8e6d28.svg\";","module.exports = __webpack_public_path__ + \"static/media/eights.31053e72.svg\";","module.exports = __webpack_public_path__ + \"static/media/sixteens.1f967ff7.svg\";","module.exports = __webpack_public_path__ + \"static/media/triplet.e0d4aa7c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"NotesSequence_base__3dvsm\",\"caption\":\"NotesSequence_caption__2LHUQ\",\"source\":\"NotesSequence_source__d5irw\",\"sequence\":\"NotesSequence_sequence__2xvMW\",\"sequence__over\":\"NotesSequence_sequence__over__3shs9\",\"item\":\"NotesSequence_item__2ctfQ\",\"item__dragging\":\"NotesSequence_item__dragging__11Bwo\",\"item__blink\":\"NotesSequence_item__blink__JjFl1\",\"blink\":\"NotesSequence_blink__UjfDb\",\"note\":\"NotesSequence_note__fO8Sk\",\"note__dragging\":\"NotesSequence_note__dragging__LV6DQ\"};","export enum NoteSize {\r\n    Fours,\r\n    Eights,\r\n    Sixteens,\r\n    Triplets,\r\n}\r\n\r\nexport const clicksBySize = {\r\n    [NoteSize.Fours]: [0],\r\n    [NoteSize.Eights]: [0, 0.5],\r\n    [NoteSize.Sixteens]: [0, 0.25, 0.5, 0.75],\r\n    [NoteSize.Triplets]: [0, 1/3, 2/3],\r\n}\r\n","import React from 'react';\r\n\r\nexport type ExerciseState = string[];\r\n\r\nconst ExercisesContext = React.createContext<ExerciseState>([]);\r\n\r\nexport default ExercisesContext;\r\n","import React from 'react';\r\nimport { DragDropContext, Draggable, Droppable, DroppableProvided, DropResult, DroppableStateSnapshot, DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport classnames from 'classnames';\r\n\r\nimport { NoteSize } from 'types';\r\n\r\nimport styles from './NotesSequence.module.scss';\r\nimport classNames from 'classnames';\r\n\r\nfunction reorder<T>(list: T[], startIndex: number, endIndex: number): T[] {\r\n    const result = [...list];\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};\r\n\r\n\r\nenum ListDroppableId {\r\n    NOTES = 'notes',\r\n    SEQUENCE = 'sequence',\r\n}\r\n\r\nexport interface NotesSequenceState {\r\n    notes: NoteSize[];\r\n    sequence: NoteSize[];\r\n}\r\n\r\nconst images = {\r\n    [NoteSize.Fours]: require('./images/quarter.svg'),\r\n    [NoteSize.Eights]: require('./images/eights.svg'),\r\n    [NoteSize.Sixteens]: require('./images/sixteens.svg'),\r\n    [NoteSize.Triplets]: require('./images/triplet.svg'),\r\n}\r\n\r\n\r\nexport interface NotesSequenceProps {\r\n    sequence: NoteSize[];\r\n    isPlaying: boolean;\r\n    playingIndex: number;\r\n    noteIndex: number;\r\n}\r\n\r\nexport default class NotesSequence extends React.Component<NotesSequenceProps, NotesSequenceState> {\r\n    constructor(props: NotesSequenceProps) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            notes: [\r\n                NoteSize.Fours,\r\n                NoteSize.Eights,\r\n                NoteSize.Triplets,\r\n                NoteSize.Sixteens,\r\n            ],\r\n            sequence: props.sequence,\r\n        };\r\n        \r\n    }\r\n\r\n    public handleDragEnd = (result: DropResult) => {\r\n        const { source, destination } = result;\r\n        \r\n        if (source.droppableId === ListDroppableId.SEQUENCE) {\r\n            if (!destination || destination.droppableId !== ListDroppableId.SEQUENCE) {\r\n                const sequence = [...this.state.sequence]\r\n                sequence.splice(source.index, 1)\r\n                return this.setState({ sequence });\r\n            }\r\n            return this.setState({\r\n                sequence: reorder(this.state.sequence, source.index, destination.index),\r\n            });\r\n            \r\n        }\r\n        if (source.droppableId === ListDroppableId.NOTES && destination?.droppableId === ListDroppableId.SEQUENCE) {\r\n            const sequence = [...this.state.sequence]\r\n            sequence.splice(destination.index, 0, this.state.notes[source.index])\r\n            return this.setState({ sequence });\r\n        }\r\n    }\r\n\r\n    renderNote = (note: NoteSize, index: number) => {\r\n        return (\r\n            <Draggable key={note} draggableId={`note_${note}`} index={index}>\r\n                {(providedDraggable, snapshot) => {\r\n\r\n                    return (\r\n                        <>\r\n                            <div\r\n                                ref={providedDraggable.innerRef}\r\n                                className={classnames(styles.note, {[styles.note__dragging]: snapshot.isDragging})}\r\n                                {...providedDraggable.draggableProps}\r\n                                {...providedDraggable.dragHandleProps}\r\n                            >\r\n                                <img alt='' src={images[note]} />\r\n                            </div>\r\n                            {\r\n                                snapshot.isDragging &&\r\n                                <div className={classnames(styles.note)}>\r\n                                    <img alt='' src={images[note]} />\r\n                                </div>\r\n                            }\r\n                        </>\r\n                    );\r\n                }}\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n    renderSequenceNote = (note: NoteSize, index: number) => {\r\n        return (\r\n            <Draggable key={index} draggableId={`sequence_note_${index}`} index={index}>\r\n                {(draggable: DraggableProvided, snapshot: DraggableStateSnapshot) => {\r\n                    return (\r\n                        <div\r\n                            ref={draggable.innerRef}\r\n                            {...draggable.draggableProps}\r\n                            {...draggable.dragHandleProps}\r\n                            className={classnames(styles.item, {\r\n                                [styles.item__draggable]: snapshot.isDragging,\r\n                                [styles.item__dropping]: snapshot.isDropAnimating,\r\n                            })}\r\n                            style={draggable.draggableProps.style}\r\n                        >\r\n                            <img alt='' src={images[note]} />\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Draggable>\r\n        );\r\n    }\r\n            \r\n    public render() {\r\n        if (this.props.isPlaying) {\r\n            return (\r\n                <>\r\n                    <div className={styles.caption}>Sequence (size: 4/4)</div>\r\n                    <div className={styles.sequence}>\r\n                        {this.state.notes.map((note, index) => (\r\n                            <div\r\n                                key={index + this.props.playingIndex}\r\n                                className={classnames(styles.item, {\r\n                                    [styles.item__blink]: index === this.props.noteIndex,\r\n                                })}\r\n                            >\r\n                                <img alt='' src={images[note]} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.caption}>Notes</div>\r\n                    <div className={styles.source}>\r\n                        {this.state.notes.map((note, index) => (\r\n                            <div className={classnames(styles.note)} key={index}>\r\n                                <img alt='' src={images[note]} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <DragDropContext onDragEnd={this.handleDragEnd}>\r\n                <div className={styles.caption}>Sequence (size: 4/4)</div>\r\n                <Droppable droppableId={ListDroppableId.SEQUENCE} direction='horizontal'>\r\n                    {(provided: DroppableProvided, snapshot: DroppableStateSnapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            className={classNames(styles.sequence, {\r\n                                [styles.sequence__over]: snapshot.isDraggingOver,\r\n                            })}\r\n                        >\r\n                            <div>\r\n                                {this.state.sequence.map(this.renderSequenceNote)}\r\n                                <div style={{display: 'none'}}>{provided.placeholder}</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n\r\n                <div className={styles.caption}>Notes</div>\r\n                <Droppable droppableId={ListDroppableId.NOTES} direction='horizontal' isDropDisabled >\r\n                    {(provided: DroppableProvided, snapshot: DroppableStateSnapshot) => (\r\n                        <div ref={provided.innerRef} className={styles.source} {...provided.droppableProps} style={{transitionDuration: `0.001s`,}}>\r\n                            {this.state.notes.map(this.renderNote)}\r\n                            <div style={{display: 'none'}}>{provided.placeholder}</div>\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { UserClick } from 'exercises/ChangingMetronomeExercise/types';\r\n\r\nimport styles from './UserClicksCanvas.module.scss';\r\n\r\nexport interface UserClicksCanvasProps {\r\n    idealClicks: number[];\r\n    realClicks: UserClick[];\r\n    from: number;\r\n}\r\n\r\nexport default class UserClicksCanvas extends React.Component<UserClicksCanvasProps> {\r\n    canvas: React.RefObject<HTMLCanvasElement>;\r\n\r\n    constructor(props: UserClicksCanvasProps) {\r\n        super(props);\r\n\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onResize);\r\n        this.onResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onResize);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.draw();\r\n    }\r\n\r\n    onResize = () => {\r\n        if (this.canvas.current) {\r\n            this.canvas.current.height = this.canvas.current.parentElement!.clientHeight;\r\n            this.canvas.current.width = this.canvas.current.parentElement!.clientWidth;\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    draw = () => {\r\n        if (!this.canvas.current) {\r\n            return;\r\n        }\r\n        const context = this.canvas.current.getContext('2d');\r\n        const { width, height } = this.canvas.current\r\n        if (!context) {\r\n            return;\r\n        }\r\n        context.clearRect(0, 0, width, height);\r\n        const min = this.props.idealClicks[this.props.from] - 0.5;\r\n        const total = this.props.idealClicks[this.props.idealClicks.length - 1] - min + 0.5;\r\n        this.props.idealClicks.forEach(click => \r\n            this.drawLine(context, width * (click - min) / total, 0, height / 2, '#4287f5')\r\n        );\r\n        this.props.realClicks.forEach(click => \r\n            this.drawLine(context, width * (click.actualClick - min) / total, height / 2, height, this.getColorByDelta(click.delta))\r\n        );\r\n    }\r\n\r\n    drawLine = (context: CanvasRenderingContext2D, x: number, y: number, height: number, color: string) => {\r\n        const roundX = Math.round(x);\r\n        context.beginPath();\r\n        context.strokeStyle = color;\r\n        context.moveTo(roundX, y);\r\n        context.lineTo(roundX, y + height);\r\n        context.stroke();\r\n        context.closePath();\r\n    }\r\n\r\n    getColorByDelta = (delta: number) => {\r\n        if (delta > 0.2) {\r\n            return '#FF0000';\r\n        }\r\n        if (delta > 0.1) {\r\n            return '#FFFF00';\r\n        }\r\n        return '#00FF00';\r\n    }\r\n\r\n    render() {\r\n        return <div className={styles.base}><canvas ref={this.canvas}></canvas></div>;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport styles from './NumberInput.module.scss';\r\n\r\ninterface NumberInputProps {\r\n    value: number;\r\n    onChanged: (value: number) => void;\r\n}\r\n\r\nconst MIN_VALUE = 10\r\nconst MAX_VALUE = 500\r\n\r\nconst NumberInput: React.FC<NumberInputProps> = (props: NumberInputProps) => {\r\n    const [value, setValue] = React.useState(props.value);\r\n\r\n    const changeValue = (newValue: number) => {\r\n        const nextValue = Math.max(Math.min(newValue, MAX_VALUE), MIN_VALUE);\r\n        setValue(nextValue);\r\n        props.onChanged(nextValue);\r\n    }\r\n\r\n    const onInputChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        changeValue(parseInt(e.target.value)); \r\n    }\r\n\r\n    const onWheel = (e: React.WheelEvent<HTMLInputElement>) => {\r\n        changeValue(value + (e.deltaY > 0 ? -1 : 1));\r\n    }\r\n\r\n    return (\r\n        <div className={styles.base}>\r\n            <div className={styles.button} onClick={changeValue.bind(null, value - 10)}>-10</div>\r\n            <div className={styles.button} onClick={changeValue.bind(null, value - 5)}>-5</div>\r\n            <div className={styles.button} onClick={changeValue.bind(null, value - 1)}>-1</div>\r\n            <input\r\n                className={styles.value}\r\n                min={MIN_VALUE} max={MAX_VALUE} type='number'\r\n                onChange={onInputChanged}\r\n                onBlur={onInputChanged}\r\n                onWheel={onWheel}\r\n                value={value}\r\n            />\r\n            <div className={styles.button} onClick={changeValue.bind(null, value + 1)}>+1</div>\r\n            <div className={styles.button} onClick={changeValue.bind(null, value + 5)}>+5</div>\r\n            <div className={styles.button} onClick={changeValue.bind(null, value + 10)}>+10</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NumberInput;","export class BaseHandler {\r\n    allowKeys: string[] = [];\r\n    anyKey: boolean = false;\r\n    startTime: number = 0;\r\n\r\n    setStartTime(startTime: number) {\r\n        this.startTime = startTime;\r\n    }\r\n    beforeRun(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n    run(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n    afterRun(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n    onKeyboardEvent(time: number, key: string) {}\r\n    onMouseEvent(time: number) {}\r\n}\r\n\r\nexport class ExerciseManager {\r\n    private handlers: BaseHandler[];\r\n    public startTime: number = 0;\r\n    public endTime: number = 0;\r\n    public inProgress: boolean = false;\r\n\r\n    constructor() {\r\n        this.handlers = [];\r\n    }\r\n\r\n    addHandler(handler: BaseHandler) {\r\n        this.handlers.push(handler);\r\n        return this;\r\n    }\r\n\r\n    async start() {\r\n        this.inProgress = true;\r\n        this.startTime = new Date().getTime();\r\n\r\n        Promise.all(this.handlers.map(handler => handler.setStartTime(this.startTime)));\r\n        await Promise.all(this.handlers.map(handler => handler.beforeRun()));\r\n        await Promise.all(this.handlers.map(handler => handler.run()));\r\n        await Promise.all(this.handlers.map(handler => handler.afterRun()));\r\n    }\r\n}\r\n\r\n\r\nexport class SoundHandler extends BaseHandler {\r\n    context: AudioContext;\r\n    gain: GainNode;\r\n    oscillator: OscillatorNode;\r\n    clicks: number[];\r\n    preClicksCount: number;\r\n\r\n    constructor(clicks: number[], preClicksCount: number) {\r\n        super();\r\n        this.clicks = clicks;\r\n        this.preClicksCount = preClicksCount;\r\n\r\n        this.context = new AudioContext();\r\n        this.oscillator = this.context.createOscillator();\r\n        this.oscillator.type = 'sine';\r\n        this.oscillator.frequency.value = 1000;\r\n\r\n        this.gain = this.context.createGain();\r\n        this.gain.gain.value = 0;\r\n        this.gain.connect(this.context.destination);\r\n        this.oscillator.connect(this.gain);\r\n    }\r\n\r\n    beforeRun(): Promise<void> {\r\n        if (this.clicks.length === 0) {\r\n            return Promise.resolve();\r\n        }\r\n        this.clicks.forEach(click => {\r\n            this.gain.gain.cancelScheduledValues(click);\r\n            this.gain.gain.setValueAtTime(0, click);\r\n\r\n            this.gain.gain.linearRampToValueAtTime(1, click + .001);\r\n            this.gain.gain.linearRampToValueAtTime(0, click + .001 + .01);\r\n        })\r\n        this.oscillator.start(0);\r\n        return new Promise(resolve => setTimeout(resolve, this.clicks[this.preClicksCount - 1] * 1000));\r\n    }\r\n\r\n    run(): Promise<void> {\r\n        const beforeRunTime = this.clicks[this.preClicksCount - 1]\r\n        return new Promise(resolve => setTimeout(resolve, (this.clicks[this.clicks.length - 1] - beforeRunTime) * 1000 + 300));\r\n    }\r\n}\r\n\r\nexport type CallbackFunction = (time: number) => void\r\nexport type TickCallbackFunction = (time: number, index: number) => void\r\n\r\n\r\nexport class TickHandler extends BaseHandler {\r\n    callback: TickCallbackFunction;\r\n    clicks: number[];\r\n\r\n    constructor(clicks: number[], callback: TickCallbackFunction) {\r\n        super();\r\n        this.clicks = clicks;\r\n        this.callback = callback;\r\n    }\r\n\r\n    beforeRun(): Promise<void> {\r\n        if (this.clicks.length > 0) {\r\n            this.clicks.forEach((click, index) => setTimeout(() => this.callback(click, index), click * 1000))\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\n\r\n\r\nexport const TYPICAL_DELAY = 50;\r\n\r\nexport class ClickHandler extends BaseHandler {\r\n    anyKey: boolean = true;\r\n    callback: CallbackFunction;\r\n\r\n    constructor(callback: CallbackFunction) {\r\n        super();\r\n        this.callback = callback;\r\n    }\r\n\r\n    run(): Promise<void> {\r\n        document.addEventListener('keydown', this.handleKeydown);\r\n        document.addEventListener('mousedown', this.handleMouseDown);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    afterRun(): Promise<void> {\r\n        document.removeEventListener('keydown', this.handleKeydown);\r\n        document.removeEventListener('mousedown', this.handleMouseDown);\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private handleKeydown = (e: KeyboardEvent) => {\r\n        const time = new Date().getTime();\r\n        if (this.anyKey || this.allowKeys.includes(e.key)) {\r\n            this.onKeyboardEvent(time, e.key);\r\n        }\r\n    }\r\n\r\n    private handleMouseDown = () => {\r\n        const time = new Date().getTime();\r\n        this.onMouseEvent(time);\r\n    }\r\n\r\n    onKeyboardEvent(time: number, key: string) {\r\n        this.callback(time - TYPICAL_DELAY);\r\n    }\r\n\r\n    onMouseEvent(time: number) {\r\n        this.callback(time - TYPICAL_DELAY);\r\n    }\r\n}\r\n","import { ClickHandler } from 'exercises/base';\r\nimport { UserClick } from 'exercises/ChangingMetronomeExercise/types';\r\n\r\nexport interface ChangingMetronomeParams {\r\n    clicks: number[];\r\n}\r\n\r\nexport type onUpdate = (clicks: UserClick[]) => void;\r\n\r\nexport class ChangingMetronomeClickHandler extends ClickHandler {\r\n    clicks: number[];\r\n    userClicks: number[];\r\n\r\n    constructor(clicks: number[], callback: onUpdate) {\r\n        super((time) => {\r\n            this.userClicks.push((time - this.startTime) / 1000);\r\n            callback(this.getUserClicks());\r\n        });\r\n\r\n        this.clicks = clicks;\r\n        this.userClicks = [];\r\n    }\r\n\r\n    getUserClicks = () => {\r\n        const clicks: UserClick[] = [];\r\n        this.userClicks.forEach(click => {\r\n            const delta = this.clicks.reduce(function(minDelta, currentValue) {\r\n                return (Math.abs(minDelta) > Math.abs(currentValue - click) ? currentValue - click : minDelta);\r\n            }, Infinity);\r\n            clicks.push({\r\n                desiredClick: click + delta,\r\n                actualClick: click,\r\n                delta,\r\n            })\r\n        });\r\n        return clicks;\r\n    }\r\n}\r\n","import { NoteSize } from 'types';\r\n\r\nexport const clicksBySize = {\r\n    [NoteSize.Fours]: Array.apply(0, Array(4)).map<number>((_: any, index: number) => (index / 4)),\r\n    [NoteSize.Eights]: Array.apply(0, Array(8)).map<number>((_: any, index: number) => (index / 8)),\r\n    [NoteSize.Triplets]: Array.apply(0, Array(12)).map<number>((_: any, index: number) => (index / 12)),\r\n    [NoteSize.Sixteens]: Array.apply(0, Array(16)).map<number>((_: any, index: number) => (index / 16)),\r\n}\r\n\r\nexport function clicksFromNotes(notes: NoteSize[], bpm: number): number[] {\r\n    const ticksPerSecond = 4 * 60 / bpm;\r\n\r\n    let clicks: number[] = [];\r\n    notes.forEach((note, index) => {\r\n        clicks = [...clicks, ...clicksBySize[note].map(click => ticksPerSecond * (click + index * 1))];\r\n    })\r\n    return clicks;\r\n}\r\n\r\nexport function getPlayingNotesIndexes(notes: NoteSize[]): number[] {\r\n    let indexes: number[] = [];\r\n    notes.forEach((note, index) => {\r\n        clicksBySize[note].forEach(() => {\r\n            indexes.push(index);\r\n        })\r\n    })\r\n    return indexes;\r\n}\r\n","import React from 'react';\r\nimport uniqBy from 'lodash/uniqBy';\r\n\r\nimport NotesSequence from 'components/NotesSequence/NotesSequence';\r\nimport TicksCanvas from 'components/UserClicksCanvas/UserClicksCanvas';\r\nimport NumberInput from 'components/NumberInput/NumberInput';\r\nimport { ExerciseManager, SoundHandler, TickHandler } from 'exercises/base';\r\nimport { ChangingMetronomeClickHandler } from 'exercises/ChangingMetronomeExercise/changingMetronome';\r\nimport { UserClick } from 'exercises/ChangingMetronomeExercise/types';\r\nimport { clicksFromNotes, getPlayingNotesIndexes } from 'utils/sizes';\r\n\r\nimport styles from './ChangingMetronomeExercise.module.scss';\r\nimport { NoteSize } from 'types';\r\n\r\nconst BPM_LOCALSTORAGE_KEY = 'saved_bpm';\r\n\r\nenum ExerciseState {\r\n    NOT_STARTED,\r\n    COUNTDOWN,\r\n    RUNNING,\r\n    FINISHED,\r\n    FAILED_TO_START,\r\n}\r\n\r\nexport const ChangingMetronomeExercise: React.FC = () => {\r\n    const savedBpm = parseInt(localStorage.getItem(BPM_LOCALSTORAGE_KEY) || '60', 10);\r\n    const [ userClicks, setUserClicks ] = React.useState<UserClick[]>([]);\r\n    const [ clicks, setClicks ] = React.useState<number[]>([]);\r\n    const [ noteIndexes, setNoteIndexes] = React.useState<number[]>([]);\r\n    const [ bpm, setBpm ] = React.useState<number>(savedBpm);\r\n    const [ countdown, setCountdown ] = React.useState<number>(0);\r\n    const [ state, setState ] = React.useState<ExerciseState>(ExerciseState.NOT_STARTED);\r\n    const [ playingIndex, setPlayingIndex ] = React.useState(0);\r\n\r\n    const sequenceRef = React.createRef<NotesSequence>();\r\n\r\n    const handleUserClicks = (newUserClicks: UserClick[]) => {\r\n        setUserClicks(newUserClicks);\r\n    }\r\n\r\n    const handleTick = (time: number, index: number) => {\r\n        setPlayingIndex(index - 4);\r\n        if (index < 4) {\r\n            setCountdown(index + 1);\r\n        }\r\n        if (index === 3) {\r\n            setState(ExerciseState.RUNNING);\r\n        }\r\n    }\r\n\r\n    const runExercise = async () => {\r\n        if (state === ExerciseState.COUNTDOWN || state === ExerciseState.RUNNING) {\r\n            return;\r\n        }\r\n        if (!sequenceRef.current) {\r\n            return;\r\n        }\r\n        localStorage.setItem(BPM_LOCALSTORAGE_KEY, bpm.toString());\r\n        const { sequence } = sequenceRef.current.state\r\n        if (sequence.length === 0) {\r\n            setState(ExerciseState.FAILED_TO_START);\r\n            return;\r\n        }\r\n        const clicks = clicksFromNotes([NoteSize.Fours, ...sequence], bpm);\r\n        setNoteIndexes(getPlayingNotesIndexes(sequence));\r\n        \r\n        setUserClicks([]);\r\n        setState(ExerciseState.COUNTDOWN);\r\n        setClicks(clicks);\r\n\r\n        const manager = new ExerciseManager();\r\n        manager.addHandler(new SoundHandler(clicks, 4));\r\n        manager.addHandler(new TickHandler(clicks, handleTick));\r\n        manager.addHandler(new ChangingMetronomeClickHandler(clicks, handleUserClicks));\r\n        await manager.start();\r\n\r\n        setState(ExerciseState.FINISHED);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.base}>\r\n            <div key={playingIndex} className={styles.blink} />\r\n            <div className={styles.notes}>\r\n                <NotesSequence\r\n                    isPlaying={state === ExerciseState.COUNTDOWN || state === ExerciseState.RUNNING}\r\n                    noteIndex={noteIndexes[playingIndex]}\r\n                    playingIndex={playingIndex}\r\n                    ref={sequenceRef}\r\n                    sequence={[NoteSize.Fours, NoteSize.Eights, NoteSize.Triplets, NoteSize.Sixteens]}\r\n                />\r\n            </div>\r\n            <div className={styles.bpm}>\r\n                <div className={styles.caption}>BPM</div>\r\n                <NumberInput onChanged={setBpm} value={bpm} />\r\n            </div>\r\n            <div className={styles.action}>\r\n                {\r\n                    state === ExerciseState.NOT_STARTED &&\r\n                    <div className={styles.info}>Manage sequence, choose bpm and click start</div>\r\n                }\r\n                {\r\n                    state === ExerciseState.COUNTDOWN &&\r\n                    <div className={styles.info}>{countdown}</div>\r\n                }\r\n                {\r\n                    (state === ExerciseState.RUNNING || state === ExerciseState.COUNTDOWN) && \r\n                    <div className={styles.info}>Use any keyboard or mouse button to click</div>\r\n                }\r\n                {\r\n                    (state === ExerciseState.RUNNING || state === ExerciseState.FINISHED) &&\r\n                    <div className={styles.ticks}>\r\n                        <TicksCanvas idealClicks={clicks} realClicks={userClicks} from={4} />\r\n                    </div>\r\n                }\r\n                {\r\n                    state === ExerciseState.FINISHED && userClicks.length !== 0 &&\r\n                    <div className={styles.info}>\r\n                        Missed notes:\r\n                        <span className={styles.score}>\r\n                            {Math.max(clicks.length - uniqBy(userClicks, c => c.desiredClick).length - 4, 0)}\r\n                        </span>\r\n                        Average delta:\r\n                        <span className={styles.score}>\r\n                            {Math.round(1000 * userClicks.map(u => Math.abs(u.delta)).reduce((prev, curr) => prev + curr) / userClicks.length) / 1000}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                {\r\n                    state === ExerciseState.FINISHED && userClicks.length === 0 &&\r\n                    <div className={styles.info}>\r\n                        No results\r\n                    </div>\r\n                }\r\n                {\r\n                    (state === ExerciseState.NOT_STARTED || state === ExerciseState.FINISHED || state === ExerciseState.FAILED_TO_START) &&\r\n                    <button className={styles.start} onClick={runExercise}>START</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport ExercisesContext from 'contexts/exercises';\r\n\r\nimport styles from './ExerciseList.module.scss';\r\nimport { ChangingMetronomeExercise } from '../../exercises/ChangingMetronomeExercise/ChangingMetronomeExercise';\r\n\r\nexport const exerciseComponentByType: {[key: string]: React.FC} = {\r\n    changingMetronome: ChangingMetronomeExercise,\r\n}\r\n\r\nexport const ExerciseList: React.FC = () => {\r\n    const exercises = React.useContext(ExercisesContext);\r\n    return (\r\n        <div className={styles.base}>\r\n            {exercises.map(exercise => (\r\n                <React.Fragment key={exercise}>{exerciseComponentByType[exercise]({})}</React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nimport ExercisesContext from 'contexts/exercises';\r\nimport { ExerciseList, exerciseComponentByType } from 'components/ExerciseList/ExerciseList';\r\n\r\nimport styles from './App.module.scss';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className={styles.app}>\r\n            <ExercisesContext.Provider value={Object.keys(exerciseComponentByType)}>\r\n                <ExerciseList />\r\n            </ExercisesContext.Provider>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ChangingMetronomeExercise_base__mA16-\",\"notes\":\"ChangingMetronomeExercise_notes__3tSdn\",\"bpm\":\"ChangingMetronomeExercise_bpm__hSsuq\",\"caption\":\"ChangingMetronomeExercise_caption__2XzOf\",\"action\":\"ChangingMetronomeExercise_action__6rQqP\",\"info\":\"ChangingMetronomeExercise_info__3Pb-I\",\"score\":\"ChangingMetronomeExercise_score__2Qrsv\",\"start\":\"ChangingMetronomeExercise_start__2_aoc\",\"blink\":\"ChangingMetronomeExercise_blink__3rmbV\",\"ticks\":\"ChangingMetronomeExercise_ticks__2XP0a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ExerciseList_base__1ctVW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"UserClicksCanvas_base__2aL8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3mQin\"};"],"sourceRoot":""}